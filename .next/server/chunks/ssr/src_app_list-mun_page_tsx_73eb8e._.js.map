{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/list-mun/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { createMUN } from '@/lib/api'\n\n\ntype FieldType = 'text' | 'number' | 'dropdown' | 'checkbox' | 'radio'\n\ninterface CustomField {\n  id: string\n  type: FieldType\n  label: string\n  options?: string[]\n}\n\nexport default function ListMUNPage() {\n  const [eventName, setEventName] = useState('')\n  const [date, setDate] = useState('')\n  const [venue, setVenue] = useState('')\n  const [registrationFees, setRegistrationFees] = useState('')\n  const [customFields, setCustomFields] = useState<CustomField[]>([])\n  const [newFieldType, setNewFieldType] = useState<FieldType>('text')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const router = useRouter()\n\n  const addCustomField = () => {\n    const newField: CustomField = {\n      id: Date.now().toString(),\n      type: newFieldType,\n      label: `New ${newFieldType} field`,\n      options: newFieldType === 'dropdown' || newFieldType === 'checkbox' || newFieldType === 'radio' ? ['Option 1'] : undefined,\n    }\n    setCustomFields([...customFields, newField])\n  }\n\n  const updateCustomField = (id: string, updates: Partial<CustomField>) => {\n    setCustomFields(customFields.map(field => \n      field.id === id ? { ...field, ...updates } : field\n    ))\n  }\n\n  const removeCustomField = (id: string) => {\n    setCustomFields(customFields.filter(field => field.id !== id))\n  }\n\n  const formatCustomFieldsForAPI = (fields: CustomField[]) => {\n    return fields.reduce((acc, field) => {\n      acc[field.label] = {\n        type: field.type,\n        options: field.options\n      }\n      return acc\n    }, {} as Record<string, any>)\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsSubmitting(true)\n    \n    try {\n      const munData = {\n        event_name: eventName,\n        date,\n        venue,\n        registration_fees: Number(registrationFees),\n        custom_fields: formatCustomFieldsForAPI(customFields)\n      }\n      \n      await createMUN(munData)\n      toast.success('MUN created successfully')\n      router.push('/muns')\n    } catch (error) {\n      console.error('Error creating MUN:', error)\n      toast.error(error instanceof Error ? error.message : 'Failed to create MUN')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">List Your MUN</h1>\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div>\n          <Label htmlFor=\"eventName\">Event Name</Label>\n          <Input\n            id=\"eventName\"\n            value={eventName}\n            onChange={(e) => setEventName(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"date\">Date</Label>\n          <Input\n            id=\"date\"\n            type=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"venue\">Venue</Label>\n          <Input\n            id=\"venue\"\n            value={venue}\n            onChange={(e) => setVenue(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"registrationFees\">Registration Fees</Label>\n          <Input\n            id=\"registrationFees\"\n            type=\"number\"\n            step=\"0.01\"\n            min=\"0\"\n            value={registrationFees}\n            onChange={(e) => setRegistrationFees(e.target.value)}\n            required\n          />\n        </div>\n\n        {customFields.map((field) => (\n          <Card key={field.id}>\n            <CardHeader>\n              <CardTitle>{field.label}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <Input\n                  value={field.label}\n                  onChange={(e) => updateCustomField(field.id, { label: e.target.value })}\n                  placeholder=\"Field Label\"\n                />\n                {(field.type === 'dropdown' || field.type === 'checkbox' || field.type === 'radio') && (\n                  <div>\n                    <Label>Options</Label>\n                    {field.options?.map((option, index) => (\n                      <Input\n                        key={index}\n                        value={option}\n                        onChange={(e) => {\n                          const newOptions = [...(field.options || [])]\n                          newOptions[index] = e.target.value\n                          updateCustomField(field.id, { options: newOptions })\n                        }}\n                        className=\"mt-1\"\n                      />\n                    ))}\n                    <Button\n                      type=\"button\"\n                      onClick={() => updateCustomField(field.id, { options: [...(field.options || []), ''] })}\n                      className=\"mt-2\"\n                    >\n                      Add Option\n                    </Button>\n                  </div>\n                )}\n                <Button type=\"button\" onClick={() => removeCustomField(field.id)} variant=\"destructive\">\n                  Remove Field\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n\n        <div>\n          <Label>Add Custom Field</Label>\n          <Select onValueChange={(value: FieldType) => setNewFieldType(value)}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select field type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"text\">Text</SelectItem>\n              <SelectItem value=\"number\">Number</SelectItem>\n              <SelectItem value=\"dropdown\">Dropdown</SelectItem>\n              <SelectItem value=\"checkbox\">Checkbox</SelectItem>\n              <SelectItem value=\"radio\">Radio</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button type=\"button\" onClick={addCustomField} className=\"mt-2\">\n            Add Field\n          </Button>\n        </div>\n\n        <Button type=\"submit\" disabled={isSubmitting}>\n          {isSubmitting ? 'Creating...' : 'Submit MUN Listing'}\n        </Button>\n      </form>\n    </div>\n  )\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}