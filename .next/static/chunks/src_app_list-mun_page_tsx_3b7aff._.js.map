{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/pravesh/Desktop/website/clone/12-12/Delified-Frontned/src/app/list-mun/page.tsx"],"sourcesContent":["export async function createMUN(munData: {\n  event_name: string;\n  date: string;\n  venue: string;\n  registration_fees: number;\n  custom_fields: Record<string, any>;\n}) {\n  const token = localStorage.getItem('auth_token');\n  if (!token) {\n    throw new Error('No authentication token found');\n  }\n\n  // Ensure registration_fees is a number\n  const formattedData = {\n    ...munData,\n    registration_fees: Number(munData.registration_fees)\n  };\n\n  const response = await fetch(`${API_BASE_URL}/muns/create/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token ${token}`,\n    },\n    body: JSON.stringify(formattedData),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(`Failed to create MUN: ${JSON.stringify(errorData)}`);\n  }\n\n  return response.json();\n}\n\n"],"names":[],"mappings":";;;AAAO,eAAe,UAAU,OAM/B;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IAEA,uCAAuC;IACvC,MAAM,gBAAgB;QACpB,GAAG,OAAO;QACV,mBAAmB,OAAO,QAAQ,iBAAiB;IACrD;IAEA,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,aAAa,CAAC,EAAE;QAC3D,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,iBAAiB,CAAC,MAAM,EAAE,OAAO;QACnC;QACA,MAAM,KAAK,SAAS,CAAC;IACvB;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;QACvD,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,KAAK,SAAS,CAAC,YAAY;IACtE;IAEA,OAAO,SAAS,IAAI;AACtB"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}